{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\default.LAPTOP-PTJLTSGT\\\\OneDrive\\\\Documents\\\\dt\\\\canteen-management\\\\src\\\\components\\\\seller\\\\QRScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Container, Typography, Paper, Button, Box, Alert } from '@mui/material';\nimport axios from 'axios';\nimport { API_URL } from '../../config';\nimport { detectQRCode } from '../../utils/qrDetector';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [scannedOrders, setScannedOrders] = useState({});\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const videoRef = useRef();\n  const canvasRef = useRef();\n  const [scanning, setScanning] = useState(false);\n  const frameProcessingRef = useRef(false);\n  const [qrSupported, setQrSupported] = useState(true);\n  useEffect(() => {\n    // Check if QR code scanning is supported\n    if (!('BarcodeDetector' in window)) {\n      setQrSupported(false);\n    }\n    return () => {\n      if (scanning) {\n        stopScanning();\n      }\n    };\n  }, [scanning]);\n  const startScanning = async () => {\n    try {\n      setScanning(true);\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: \"environment\",\n          width: {\n            ideal: 1280\n          },\n          height: {\n            ideal: 720\n          }\n        }\n      });\n      videoRef.current.srcObject = stream;\n      await videoRef.current.play();\n\n      // Start processing frames\n      processFrame();\n    } catch (error) {\n      console.error('Error accessing camera:', error);\n      setResult({\n        status: 'error',\n        message: 'Unable to access camera. Please make sure you have granted camera permissions.'\n      });\n      setScanning(false);\n    }\n  };\n  const stopScanning = () => {\n    var _videoRef$current;\n    if ((_videoRef$current = videoRef.current) !== null && _videoRef$current !== void 0 && _videoRef$current.srcObject) {\n      const tracks = videoRef.current.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n    setScanning(false);\n  };\n  const processFrame = async () => {\n    if (!scanning || !videoRef.current || !canvasRef.current || frameProcessingRef.current) return;\n    frameProcessingRef.current = true;\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    try {\n      // Make sure video is ready\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        // Set canvas size to match video\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n\n        // Draw current frame to canvas\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n        // Get image data from canvas\n        const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n\n        // Try to detect QR code\n        const qrCode = await detectQRCode(imageData);\n        if (qrCode) {\n          // Stop scanning and process the order\n          stopScanning();\n          await handleOrderId(qrCode);\n          return;\n        }\n      }\n    } catch (error) {\n      console.error('Error processing frame:', error);\n    } finally {\n      frameProcessingRef.current = false;\n      // Continue scanning if still active\n      if (scanning) {\n        requestAnimationFrame(processFrame);\n      }\n    }\n  };\n  const handleOrderId = async orderId => {\n    try {\n      setLoading(true);\n\n      // Check if order was already scanned\n      if (scannedOrders[orderId]) {\n        setResult({\n          orderId,\n          status: 'already_served',\n          message: 'This order has already been served!'\n        });\n        return;\n      }\n\n      // Fetch order details from backend\n      const response = await axios.get(`${API_URL}/orders/${orderId}`);\n      const order = response.data;\n\n      // Mark order as served using PATCH request\n      await axios.patch(`${API_URL}/orders/${orderId}`, {\n        status: 'completed'\n      });\n      setScannedOrders({\n        ...scannedOrders,\n        [orderId]: true\n      });\n      setResult({\n        orderId,\n        status: 'new_order',\n        message: 'Order found and marked as completed!',\n        details: {\n          orderId: order._id,\n          items: order.items.map(item => {\n            var _item$productId;\n            return {\n              name: ((_item$productId = item.productId) === null || _item$productId === void 0 ? void 0 : _item$productId.name) || 'Unknown Product',\n              quantity: item.quantity,\n              price: item.price\n            };\n          }),\n          timestamp: new Date(order.createdAt).toLocaleString(),\n          total: order.total\n        }\n      });\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error('Error processing order:', error);\n      let errorMessage = 'Failed to process order';\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 404) {\n        errorMessage = 'Invalid QR code. Please try scanning again.';\n      } else if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.message) {\n        errorMessage = error.response.data.message;\n      }\n      setResult({\n        status: 'error',\n        message: errorMessage\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      style: {\n        margin: '20px 0'\n      },\n      children: \"QR Code Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), !qrSupported && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"QR code scanning is not supported in your browser. Please use a modern browser like Chrome or Edge.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: '20px',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            maxWidth: '100%',\n            margin: '0 auto',\n            overflow: 'hidden',\n            borderRadius: '8px',\n            backgroundColor: '#000'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            style: {\n              width: '100%',\n              maxWidth: '500px',\n              display: scanning ? 'block' : 'none'\n            },\n            playsInline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: canvasRef,\n            style: {\n              display: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), scanning && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              width: '200px',\n              height: '200px',\n              border: '2px solid #fff',\n              borderRadius: '20px',\n              boxShadow: '0 0 0 100vmax rgba(0, 0, 0, 0.5)',\n              pointerEvents: 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: scanning ? \"secondary\" : \"primary\",\n          onClick: () => scanning ? stopScanning() : startScanning(),\n          style: {\n            margin: '20px 0'\n          },\n          disabled: loading || !qrSupported,\n          children: loading ? 'Processing...' : scanning ? 'Stop Scanning' : 'Start Scanning'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: '20px',\n        backgroundColor: result.status === 'already_served' ? '#ffebee' : result.status === 'error' ? '#fff3e0' : '#e8f5e9'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: result.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), result.details && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: [\"Order ID: \", result.details.orderId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: [\"Time: \", result.details.timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: \"Items:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this), result.details.items.map((item, index) => /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"- \", item.name, \" x \", item.quantity, \" - $\", (item.price * item.quantity).toFixed(2)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            marginTop: '10px'\n          },\n          children: [\"Total: $\", result.details.total.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this), result && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => {\n        setResult(null);\n        if (!scanning) {\n          startScanning();\n        }\n      },\n      style: {\n        marginTop: '20px'\n      },\n      children: \"Scan Next Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"We903ijgGO9gX8VTV+BEjpshKbA=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Container","Typography","Paper","Button","Box","Alert","axios","API_URL","detectQRCode","jsxDEV","_jsxDEV","Fragment","_Fragment","QRScanner","_s","scannedOrders","setScannedOrders","result","setResult","loading","setLoading","videoRef","canvasRef","scanning","setScanning","frameProcessingRef","qrSupported","setQrSupported","window","stopScanning","startScanning","stream","navigator","mediaDevices","getUserMedia","video","facingMode","width","ideal","height","current","srcObject","play","processFrame","error","console","status","message","_videoRef$current","tracks","getTracks","forEach","track","stop","canvas","context","getContext","readyState","HAVE_ENOUGH_DATA","videoWidth","videoHeight","drawImage","imageData","getImageData","qrCode","handleOrderId","requestAnimationFrame","orderId","response","get","order","data","patch","details","_id","items","map","item","_item$productId","name","productId","quantity","price","timestamp","Date","createdAt","toLocaleString","total","_error$response","_error$response2","_error$response2$data","errorMessage","children","variant","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","severity","marginBottom","padding","textAlign","position","maxWidth","overflow","borderRadius","backgroundColor","ref","display","playsInline","top","left","transform","border","boxShadow","pointerEvents","color","onClick","disabled","gutterBottom","index","toFixed","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/default.LAPTOP-PTJLTSGT/OneDrive/Documents/dt/canteen-management/src/components/seller/QRScanner.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Container, Typography, Paper, Button, Box, Alert } from '@mui/material';\nimport axios from 'axios';\nimport { API_URL } from '../../config';\nimport { detectQRCode } from '../../utils/qrDetector';\n\nconst QRScanner = () => {\n  const [scannedOrders, setScannedOrders] = useState({});\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const videoRef = useRef();\n  const canvasRef = useRef();\n  const [scanning, setScanning] = useState(false);\n  const frameProcessingRef = useRef(false);\n  const [qrSupported, setQrSupported] = useState(true);\n\n  useEffect(() => {\n    // Check if QR code scanning is supported\n    if (!('BarcodeDetector' in window)) {\n      setQrSupported(false);\n    }\n\n    return () => {\n      if (scanning) {\n        stopScanning();\n      }\n    };\n  }, [scanning]);\n\n  const startScanning = async () => {\n    try {\n      setScanning(true);\n      const stream = await navigator.mediaDevices.getUserMedia({ \n        video: { \n          facingMode: \"environment\",\n          width: { ideal: 1280 },\n          height: { ideal: 720 }\n        } \n      });\n      \n      videoRef.current.srcObject = stream;\n      await videoRef.current.play();\n\n      // Start processing frames\n      processFrame();\n    } catch (error) {\n      console.error('Error accessing camera:', error);\n      setResult({\n        status: 'error',\n        message: 'Unable to access camera. Please make sure you have granted camera permissions.'\n      });\n      setScanning(false);\n    }\n  };\n\n  const stopScanning = () => {\n    if (videoRef.current?.srcObject) {\n      const tracks = videoRef.current.srcObject.getTracks();\n      tracks.forEach(track => track.stop());\n      videoRef.current.srcObject = null;\n    }\n    setScanning(false);\n  };\n\n  const processFrame = async () => {\n    if (!scanning || !videoRef.current || !canvasRef.current || frameProcessingRef.current) return;\n\n    frameProcessingRef.current = true;\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    try {\n      // Make sure video is ready\n      if (video.readyState === video.HAVE_ENOUGH_DATA) {\n        // Set canvas size to match video\n        canvas.width = video.videoWidth;\n        canvas.height = video.videoHeight;\n\n        // Draw current frame to canvas\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n        // Get image data from canvas\n        const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\n        \n        // Try to detect QR code\n        const qrCode = await detectQRCode(imageData);\n        \n        if (qrCode) {\n          // Stop scanning and process the order\n          stopScanning();\n          await handleOrderId(qrCode);\n          return;\n        }\n      }\n    } catch (error) {\n      console.error('Error processing frame:', error);\n    } finally {\n      frameProcessingRef.current = false;\n      // Continue scanning if still active\n      if (scanning) {\n        requestAnimationFrame(processFrame);\n      }\n    }\n  };\n\n  const handleOrderId = async (orderId) => {\n    try {\n      setLoading(true);\n\n      // Check if order was already scanned\n      if (scannedOrders[orderId]) {\n        setResult({\n          orderId,\n          status: 'already_served',\n          message: 'This order has already been served!'\n        });\n        return;\n      }\n\n      // Fetch order details from backend\n      const response = await axios.get(`${API_URL}/orders/${orderId}`);\n      const order = response.data;\n\n      // Mark order as served using PATCH request\n      await axios.patch(`${API_URL}/orders/${orderId}`, { status: 'completed' });\n      setScannedOrders({ ...scannedOrders, [orderId]: true });\n\n      setResult({\n        orderId,\n        status: 'new_order',\n        message: 'Order found and marked as completed!',\n        details: {\n          orderId: order._id,\n          items: order.items.map(item => ({\n            name: item.productId?.name || 'Unknown Product',\n            quantity: item.quantity,\n            price: item.price\n          })),\n          timestamp: new Date(order.createdAt).toLocaleString(),\n          total: order.total\n        }\n      });\n    } catch (error) {\n      console.error('Error processing order:', error);\n      let errorMessage = 'Failed to process order';\n      \n      if (error.response?.status === 404) {\n        errorMessage = 'Invalid QR code. Please try scanning again.';\n      } else if (error.response?.data?.message) {\n        errorMessage = error.response.data.message;\n      }\n      \n      setResult({\n        status: 'error',\n        message: errorMessage\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" style={{ margin: '20px 0' }}>\n        QR Code Scanner\n      </Typography>\n\n      {!qrSupported && (\n        <Alert severity=\"warning\" style={{ marginBottom: '20px' }}>\n          QR code scanning is not supported in your browser. Please use a modern browser like Chrome or Edge.\n        </Alert>\n      )}\n\n      <Paper style={{ padding: '20px', marginBottom: '20px' }}>\n        <Box textAlign=\"center\">\n          <div style={{ \n            position: 'relative', \n            maxWidth: '100%', \n            margin: '0 auto',\n            overflow: 'hidden',\n            borderRadius: '8px',\n            backgroundColor: '#000'\n          }}>\n            <video\n              ref={videoRef}\n              style={{\n                width: '100%',\n                maxWidth: '500px',\n                display: scanning ? 'block' : 'none'\n              }}\n              playsInline\n            />\n            <canvas\n              ref={canvasRef}\n              style={{ display: 'none' }}\n            />\n            {scanning && (\n              <div style={{\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                width: '200px',\n                height: '200px',\n                border: '2px solid #fff',\n                borderRadius: '20px',\n                boxShadow: '0 0 0 100vmax rgba(0, 0, 0, 0.5)',\n                pointerEvents: 'none'\n              }} />\n            )}\n          </div>\n\n          <Button\n            variant=\"contained\"\n            color={scanning ? \"secondary\" : \"primary\"}\n            onClick={() => scanning ? stopScanning() : startScanning()}\n            style={{ margin: '20px 0' }}\n            disabled={loading || !qrSupported}\n          >\n            {loading ? 'Processing...' : scanning ? 'Stop Scanning' : 'Start Scanning'}\n          </Button>\n        </Box>\n      </Paper>\n\n      {result && (\n        <Paper style={{ \n          padding: '20px', \n          backgroundColor: \n            result.status === 'already_served' ? '#ffebee' : \n            result.status === 'error' ? '#fff3e0' : '#e8f5e9' \n        }}>\n          <Typography variant=\"h6\" gutterBottom>\n            {result.message}\n          </Typography>\n          \n          {result.details && (\n            <>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Order ID: {result.details.orderId}\n              </Typography>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Time: {result.details.timestamp}\n              </Typography>\n              <Typography variant=\"subtitle1\">Items:</Typography>\n              {result.details.items.map((item, index) => (\n                <Typography key={index}>\n                  - {item.name} x {item.quantity} - ${(item.price * item.quantity).toFixed(2)}\n                </Typography>\n              ))}\n              <Typography variant=\"h6\" style={{ marginTop: '10px' }}>\n                Total: ${result.details.total.toFixed(2)}\n              </Typography>\n            </>\n          )}\n        </Paper>\n      )}\n\n      {result && (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            setResult(null);\n            if (!scanning) {\n              startScanning();\n            }\n          }}\n          style={{ marginTop: '20px' }}\n        >\n          Scan Next Order\n        </Button>\n      )}\n    </Container>\n  );\n};\n\nexport default QRScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}