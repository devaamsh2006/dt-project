{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\default.LAPTOP-PTJLTSGT\\\\OneDrive\\\\Documents\\\\dt\\\\canteen-management\\\\src\\\\components\\\\seller\\\\QRScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Container, Typography, Paper, Button, Box } from '@mui/material';\nimport axios from 'axios';\nimport { API_URL } from '../../../config';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [scannedOrders, setScannedOrders] = useState({});\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const fileInputRef = useRef();\n  const handleFileInput = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    try {\n      setLoading(true);\n      // Here you would normally use a QR code reading library to read the image\n      // For now, we'll assume the file name is the order ID (for testing)\n      const orderId = file.name.split('.')[0];\n      await handleOrderId(orderId);\n    } catch (error) {\n      console.error('Error reading QR code:', error);\n      setResult({\n        status: 'error',\n        message: 'Failed to read QR code. Please try again.'\n      });\n    } finally {\n      setLoading(false);\n      // Reset file input\n      event.target.value = '';\n    }\n  };\n  const handleOrderId = async orderId => {\n    try {\n      // Check if order was already scanned\n      if (scannedOrders[orderId]) {\n        setResult({\n          orderId,\n          status: 'already_served',\n          message: 'This order has already been served!'\n        });\n        return;\n      }\n\n      // Fetch order details from backend\n      const response = await axios.get(`${API_URL}/orders/${orderId}`);\n      const order = response.data;\n\n      // Mark order as served\n      await axios.put(`${API_URL}/orders/${orderId}`, {\n        status: 'completed'\n      });\n      setScannedOrders({\n        ...scannedOrders,\n        [orderId]: true\n      });\n      setResult({\n        orderId,\n        status: 'new_order',\n        message: 'Order found and marked as completed!',\n        details: {\n          orderId: order._id,\n          items: order.items,\n          timestamp: new Date(order.createdAt).toLocaleString(),\n          total: order.total\n        }\n      });\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error processing order:', error);\n      setResult({\n        status: 'error',\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to process order'\n      });\n    }\n  };\n  const handleError = err => {\n    console.error('Error:', err);\n    setResult({\n      status: 'error',\n      message: 'An error occurred while scanning. Please try again.'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      style: {\n        margin: '20px 0'\n      },\n      children: \"QR Code Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: '20px',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleFileInput,\n          ref: fileInputRef,\n          style: {\n            display: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => fileInputRef.current.click(),\n          disabled: loading,\n          children: loading ? 'Processing...' : 'Upload QR Code Image'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: '20px',\n        backgroundColor: result.status === 'already_served' ? '#ffebee' : result.status === 'error' ? '#fff3e0' : '#e8f5e9'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: result.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), result.details && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: [\"Order ID: \", result.orderId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: [\"Time: \", result.details.timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: \"Items:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this), result.details.items.map((item, index) => /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"- \", item.name, \" x \", item.quantity]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setResult(null),\n      style: {\n        marginTop: '20px'\n      },\n      children: \"Clear Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"FvFjl4SgD/yNV2Sjj6ocqie/rHw=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","useRef","Container","Typography","Paper","Button","Box","axios","API_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","QRScanner","_s","scannedOrders","setScannedOrders","result","setResult","loading","setLoading","fileInputRef","handleFileInput","event","file","target","files","orderId","name","split","handleOrderId","error","console","status","message","value","response","get","order","data","put","details","_id","items","timestamp","Date","createdAt","toLocaleString","total","_error$response","_error$response$data","handleError","err","children","variant","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","padding","marginBottom","textAlign","type","accept","onChange","ref","display","color","onClick","current","click","disabled","backgroundColor","gutterBottom","map","item","index","quantity","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/default.LAPTOP-PTJLTSGT/OneDrive/Documents/dt/canteen-management/src/components/seller/QRScanner.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Container, Typography, Paper, Button, Box } from '@mui/material';\nimport axios from 'axios';\nimport { API_URL } from '../../../config';\n\nconst QRScanner = () => {\n  const [scannedOrders, setScannedOrders] = useState({});\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const fileInputRef = useRef();\n\n  const handleFileInput = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    try {\n      setLoading(true);\n      // Here you would normally use a QR code reading library to read the image\n      // For now, we'll assume the file name is the order ID (for testing)\n      const orderId = file.name.split('.')[0];\n      await handleOrderId(orderId);\n    } catch (error) {\n      console.error('Error reading QR code:', error);\n      setResult({\n        status: 'error',\n        message: 'Failed to read QR code. Please try again.'\n      });\n    } finally {\n      setLoading(false);\n      // Reset file input\n      event.target.value = '';\n    }\n  };\n\n  const handleOrderId = async (orderId) => {\n    try {\n      // Check if order was already scanned\n      if (scannedOrders[orderId]) {\n        setResult({\n          orderId,\n          status: 'already_served',\n          message: 'This order has already been served!'\n        });\n        return;\n      }\n\n      // Fetch order details from backend\n      const response = await axios.get(`${API_URL}/orders/${orderId}`);\n      const order = response.data;\n\n      // Mark order as served\n      await axios.put(`${API_URL}/orders/${orderId}`, { status: 'completed' });\n      setScannedOrders({ ...scannedOrders, [orderId]: true });\n\n      setResult({\n        orderId,\n        status: 'new_order',\n        message: 'Order found and marked as completed!',\n        details: {\n          orderId: order._id,\n          items: order.items,\n          timestamp: new Date(order.createdAt).toLocaleString(),\n          total: order.total\n        }\n      });\n    } catch (error) {\n      console.error('Error processing order:', error);\n      setResult({\n        status: 'error',\n        message: error.response?.data?.message || 'Failed to process order'\n      });\n    }\n  };\n\n  const handleError = (err) => {\n    console.error('Error:', err);\n    setResult({\n      status: 'error',\n      message: 'An error occurred while scanning. Please try again.'\n    });\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" style={{ margin: '20px 0' }}>\n        QR Code Scanner\n      </Typography>\n\n      <Paper style={{ padding: '20px', marginBottom: '20px' }}>\n        <Box textAlign=\"center\">\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={handleFileInput}\n            ref={fileInputRef}\n            style={{ display: 'none' }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => fileInputRef.current.click()}\n            disabled={loading}\n          >\n            {loading ? 'Processing...' : 'Upload QR Code Image'}\n          </Button>\n        </Box>\n      </Paper>\n\n      {result && (\n        <Paper style={{ \n          padding: '20px', \n          backgroundColor: \n            result.status === 'already_served' ? '#ffebee' : \n            result.status === 'error' ? '#fff3e0' : '#e8f5e9' \n        }}>\n          <Typography variant=\"h6\" gutterBottom>\n            {result.message}\n          </Typography>\n          \n          {result.details && (\n            <>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Order ID: {result.orderId}\n              </Typography>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Time: {result.details.timestamp}\n              </Typography>\n              <Typography variant=\"subtitle1\">Items:</Typography>\n              {result.details.items.map((item, index) => (\n                <Typography key={index}>\n                  - {item.name} x {item.quantity}\n                </Typography>\n              ))}\n            </>\n          )}\n        </Paper>\n      )}\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => setResult(null)}\n        style={{ marginTop: '20px' }}\n      >\n        Clear Result\n      </Button>\n    </Container>\n  );\n};\n\nexport default QRScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}