{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\default.LAPTOP-PTJLTSGT\\\\OneDrive\\\\Documents\\\\dt\\\\canteen-management\\\\src\\\\components\\\\seller\\\\QRScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Typography, Paper, Button } from '@material-ui/core';\nimport QrReader from 'react-qr-reader';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [scannedOrders, setScannedOrders] = useState({});\n  const [result, setResult] = useState(null);\n  const handleScan = data => {\n    if (data) {\n      // Check if order was already scanned\n      if (scannedOrders[data]) {\n        setResult({\n          orderId: data,\n          status: 'already_served',\n          message: 'This order has already been served!'\n        });\n      } else {\n        // Simulate fetching order details from backend\n        const orderDetails = {\n          orderId: data,\n          items: [{\n            name: 'Burger',\n            quantity: 2\n          }, {\n            name: 'Pizza',\n            quantity: 1\n          }],\n          timestamp: new Date().toLocaleString()\n        };\n\n        // Mark order as served\n        setScannedOrders({\n          ...scannedOrders,\n          [data]: true\n        });\n        setResult({\n          orderId: data,\n          status: 'new_order',\n          message: 'New order found!',\n          details: orderDetails\n        });\n      }\n    }\n  };\n  const handleError = err => {\n    console.error(err);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      style: {\n        margin: '20px 0'\n      },\n      children: \"QR Code Scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: '20px',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(QrReader, {\n        delay: 300,\n        onError: handleError,\n        onScan: handleScan,\n        style: {\n          width: '100%',\n          maxWidth: '400px',\n          margin: '0 auto'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: '20px',\n        backgroundColor: result.status === 'already_served' ? '#ffebee' : '#e8f5e9'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: result.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), result.details && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: [\"Order ID: \", result.orderId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: [\"Time: \", result.details.timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          children: \"Items:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), result.details.items.map((item, index) => /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"- \", item.name, \" x \", item.quantity]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => setResult(null),\n      style: {\n        marginTop: '20px'\n      },\n      children: \"Clear Result\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"z1g5Q/rrf31HjiHPDzqBJy57L+c=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","Container","Typography","Paper","Button","QrReader","jsxDEV","_jsxDEV","Fragment","_Fragment","QRScanner","_s","scannedOrders","setScannedOrders","result","setResult","handleScan","data","orderId","status","message","orderDetails","items","name","quantity","timestamp","Date","toLocaleString","details","handleError","err","console","error","children","variant","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","padding","marginBottom","delay","onError","onScan","width","maxWidth","backgroundColor","gutterBottom","map","item","index","color","onClick","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/default.LAPTOP-PTJLTSGT/OneDrive/Documents/dt/canteen-management/src/components/seller/QRScanner.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Typography, Paper, Button } from '@material-ui/core';\nimport QrReader from 'react-qr-reader';\n\nconst QRScanner = () => {\n  const [scannedOrders, setScannedOrders] = useState({});\n  const [result, setResult] = useState(null);\n\n  const handleScan = (data) => {\n    if (data) {\n      // Check if order was already scanned\n      if (scannedOrders[data]) {\n        setResult({\n          orderId: data,\n          status: 'already_served',\n          message: 'This order has already been served!'\n        });\n      } else {\n        // Simulate fetching order details from backend\n        const orderDetails = {\n          orderId: data,\n          items: [\n            { name: 'Burger', quantity: 2 },\n            { name: 'Pizza', quantity: 1 }\n          ],\n          timestamp: new Date().toLocaleString()\n        };\n\n        // Mark order as served\n        setScannedOrders({ ...scannedOrders, [data]: true });\n        \n        setResult({\n          orderId: data,\n          status: 'new_order',\n          message: 'New order found!',\n          details: orderDetails\n        });\n      }\n    }\n  };\n\n  const handleError = (err) => {\n    console.error(err);\n  };\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" style={{ margin: '20px 0' }}>\n        QR Code Scanner\n      </Typography>\n\n      <Paper style={{ padding: '20px', marginBottom: '20px' }}>\n        <QrReader\n          delay={300}\n          onError={handleError}\n          onScan={handleScan}\n          style={{ width: '100%', maxWidth: '400px', margin: '0 auto' }}\n        />\n      </Paper>\n\n      {result && (\n        <Paper style={{ padding: '20px', backgroundColor: result.status === 'already_served' ? '#ffebee' : '#e8f5e9' }}>\n          <Typography variant=\"h6\" gutterBottom>\n            {result.message}\n          </Typography>\n          \n          {result.details && (\n            <>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Order ID: {result.orderId}\n              </Typography>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                Time: {result.details.timestamp}\n              </Typography>\n              <Typography variant=\"subtitle1\">Items:</Typography>\n              {result.details.items.map((item, index) => (\n                <Typography key={index}>\n                  - {item.name} x {item.quantity}\n                </Typography>\n              ))}\n            </>\n          )}\n        </Paper>\n      )}\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => setResult(null)}\n        style={{ marginTop: '20px' }}\n      >\n        Clear Result\n      </Button>\n    </Container>\n  );\n};\n\nexport default QRScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}