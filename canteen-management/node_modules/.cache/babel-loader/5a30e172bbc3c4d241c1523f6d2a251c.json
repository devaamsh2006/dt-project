{"ast":null,"code":"var VideoConstraintsUtil = function () {\n  function VideoConstraintsUtil() {}\n  VideoConstraintsUtil.isMediaStreamConstraintsValid = function (videoConstraints, logger) {\n    if (typeof videoConstraints !== \"object\") {\n      var typeofVideoConstraints = typeof videoConstraints;\n      logger.logError(\"videoConstraints should be of type object, the \" + \"object passed is of type \".concat(typeofVideoConstraints, \".\"), true);\n      return false;\n    }\n    var bannedKeys = [\"autoGainControl\", \"channelCount\", \"echoCancellation\", \"latency\", \"noiseSuppression\", \"sampleRate\", \"sampleSize\", \"volume\"];\n    var bannedkeysSet = new Set(bannedKeys);\n    var keysInVideoConstraints = Object.keys(videoConstraints);\n    for (var _i = 0, keysInVideoConstraints_1 = keysInVideoConstraints; _i < keysInVideoConstraints_1.length; _i++) {\n      var key = keysInVideoConstraints_1[_i];\n      if (bannedkeysSet.has(key)) {\n        logger.logError(\"\".concat(key, \" is not supported videoConstaints.\"), true);\n        return false;\n      }\n    }\n    return true;\n  };\n  return VideoConstraintsUtil;\n}();\nexport { VideoConstraintsUtil };","map":{"version":3,"sources":["../../src/utils.ts"],"names":[],"mappings":"AAeA,IAAA,oBAAA,GAAA,YAAA;EAAA,SAAA,oBAAA,CAAA,EAAA,CAqCA;EApCkB,oBAAA,CAAA,6BAA6B,GAA3C,UACI,gBAAuC,EACvC,MAAc,EAAA;IACd,IAAI,OAAO,gBAAgB,KAAK,QAAQ,EAAE;MACtC,IAAM,sBAAsB,GAAG,OAAO,gBAAgB;MACtD,MAAM,CAAC,QAAQ,CACX,iDAAiD,GAC3C,2BAAA,CAAA,MAAA,CAA4B,sBAAsB,EAAA,GAAA,CAAG,EACvC,IAAI,CAAC;MAC7B,OAAO,KAAK;IACf;IAGD,IAAM,UAAU,GAAG,CACf,iBAAiB,EACjB,cAAc,EACd,kBAAkB,EAClB,SAAS,EACT,kBAAkB,EAClB,YAAY,EACZ,YAAY,EACZ,QAAQ,CACX;IACD,IAAM,aAAa,GAAG,IAAI,GAAG,CAAC,UAAU,CAAC;IACzC,IAAM,sBAAsB,GAAG,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;IAC5D,KAAkB,IAAA,EAAA,GAAA,CAAsB,EAAtB,wBAAA,GAAA,sBAAsB,EAAtB,EAAA,GAAA,wBAAA,CAAA,MAAsB,EAAtB,EAAA,EAAsB,EAAE;MAArC,IAAM,GAAG,GAAA,wBAAA,CAAA,EAAA,CAAA;MACV,IAAI,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QACxB,MAAM,CAAC,QAAQ,CACX,EAAA,CAAA,MAAA,CAAG,GAAG,EAAA,oCAAA,CAAoC,EACtB,IAAI,CAAC;QAC7B,OAAO,KAAK;MACf;IACJ;IAED,OAAO,IAAI;EACf,CAAC;EACL,OAAA,oBAAC;AAAD,CAAC,CAAA,CAAA","sourceRoot":"","sourcesContent":["var VideoConstraintsUtil = (function () {\n    function VideoConstraintsUtil() {\n    }\n    VideoConstraintsUtil.isMediaStreamConstraintsValid = function (videoConstraints, logger) {\n        if (typeof videoConstraints !== \"object\") {\n            var typeofVideoConstraints = typeof videoConstraints;\n            logger.logError(\"videoConstraints should be of type object, the \"\n                + \"object passed is of type \".concat(typeofVideoConstraints, \".\"), true);\n            return false;\n        }\n        var bannedKeys = [\n            \"autoGainControl\",\n            \"channelCount\",\n            \"echoCancellation\",\n            \"latency\",\n            \"noiseSuppression\",\n            \"sampleRate\",\n            \"sampleSize\",\n            \"volume\"\n        ];\n        var bannedkeysSet = new Set(bannedKeys);\n        var keysInVideoConstraints = Object.keys(videoConstraints);\n        for (var _i = 0, keysInVideoConstraints_1 = keysInVideoConstraints; _i < keysInVideoConstraints_1.length; _i++) {\n            var key = keysInVideoConstraints_1[_i];\n            if (bannedkeysSet.has(key)) {\n                logger.logError(\"\".concat(key, \" is not supported videoConstaints.\"), true);\n                return false;\n            }\n        }\n        return true;\n    };\n    return VideoConstraintsUtil;\n}());\nexport { VideoConstraintsUtil };\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}