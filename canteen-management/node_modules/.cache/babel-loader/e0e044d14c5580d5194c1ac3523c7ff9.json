{"ast":null,"code":"import * as ZXing from \"../third_party/zxing-js.umd\";\nimport { QrcodeResultFormat, Html5QrcodeSupportedFormats } from \"./core\";\nvar ZXingHtml5QrcodeDecoder = function () {\n  function ZXingHtml5QrcodeDecoder(requestedFormats, verbose, logger) {\n    this.formatMap = new Map([[Html5QrcodeSupportedFormats.QR_CODE, ZXing.BarcodeFormat.QR_CODE], [Html5QrcodeSupportedFormats.AZTEC, ZXing.BarcodeFormat.AZTEC], [Html5QrcodeSupportedFormats.CODABAR, ZXing.BarcodeFormat.CODABAR], [Html5QrcodeSupportedFormats.CODE_39, ZXing.BarcodeFormat.CODE_39], [Html5QrcodeSupportedFormats.CODE_93, ZXing.BarcodeFormat.CODE_93], [Html5QrcodeSupportedFormats.CODE_128, ZXing.BarcodeFormat.CODE_128], [Html5QrcodeSupportedFormats.DATA_MATRIX, ZXing.BarcodeFormat.DATA_MATRIX], [Html5QrcodeSupportedFormats.MAXICODE, ZXing.BarcodeFormat.MAXICODE], [Html5QrcodeSupportedFormats.ITF, ZXing.BarcodeFormat.ITF], [Html5QrcodeSupportedFormats.EAN_13, ZXing.BarcodeFormat.EAN_13], [Html5QrcodeSupportedFormats.EAN_8, ZXing.BarcodeFormat.EAN_8], [Html5QrcodeSupportedFormats.PDF_417, ZXing.BarcodeFormat.PDF_417], [Html5QrcodeSupportedFormats.RSS_14, ZXing.BarcodeFormat.RSS_14], [Html5QrcodeSupportedFormats.RSS_EXPANDED, ZXing.BarcodeFormat.RSS_EXPANDED], [Html5QrcodeSupportedFormats.UPC_A, ZXing.BarcodeFormat.UPC_A], [Html5QrcodeSupportedFormats.UPC_E, ZXing.BarcodeFormat.UPC_E], [Html5QrcodeSupportedFormats.UPC_EAN_EXTENSION, ZXing.BarcodeFormat.UPC_EAN_EXTENSION]]);\n    this.reverseFormatMap = this.createReverseFormatMap();\n    if (!ZXing) {\n      throw \"Use html5qrcode.min.js without edit, ZXing not found.\";\n    }\n    this.verbose = verbose;\n    this.logger = logger;\n    var formats = this.createZXingFormats(requestedFormats);\n    var hints = new Map();\n    hints.set(ZXing.DecodeHintType.POSSIBLE_FORMATS, formats);\n    hints.set(ZXing.DecodeHintType.TRY_HARDER, false);\n    this.hints = hints;\n  }\n  ZXingHtml5QrcodeDecoder.prototype.decodeAsync = function (canvas) {\n    var _this = this;\n    return new Promise(function (resolve, reject) {\n      try {\n        resolve(_this.decode(canvas));\n      } catch (error) {\n        reject(error);\n      }\n    });\n  };\n  ZXingHtml5QrcodeDecoder.prototype.decode = function (canvas) {\n    var zxingDecoder = new ZXing.MultiFormatReader(this.verbose, this.hints);\n    var luminanceSource = new ZXing.HTMLCanvasElementLuminanceSource(canvas);\n    var binaryBitmap = new ZXing.BinaryBitmap(new ZXing.HybridBinarizer(luminanceSource));\n    var result = zxingDecoder.decode(binaryBitmap);\n    return {\n      text: result.text,\n      format: QrcodeResultFormat.create(this.toHtml5QrcodeSupportedFormats(result.format)),\n      debugData: this.createDebugData()\n    };\n  };\n  ZXingHtml5QrcodeDecoder.prototype.createReverseFormatMap = function () {\n    var result = new Map();\n    this.formatMap.forEach(function (value, key, _) {\n      result.set(value, key);\n    });\n    return result;\n  };\n  ZXingHtml5QrcodeDecoder.prototype.toHtml5QrcodeSupportedFormats = function (zxingFormat) {\n    if (!this.reverseFormatMap.has(zxingFormat)) {\n      throw \"reverseFormatMap doesn't have \".concat(zxingFormat);\n    }\n    return this.reverseFormatMap.get(zxingFormat);\n  };\n  ZXingHtml5QrcodeDecoder.prototype.createZXingFormats = function (requestedFormats) {\n    var zxingFormats = [];\n    for (var _i = 0, requestedFormats_1 = requestedFormats; _i < requestedFormats_1.length; _i++) {\n      var requestedFormat = requestedFormats_1[_i];\n      if (this.formatMap.has(requestedFormat)) {\n        zxingFormats.push(this.formatMap.get(requestedFormat));\n      } else {\n        this.logger.logError(\"\".concat(requestedFormat, \" is not supported by\") + \"ZXingHtml5QrcodeShim\");\n      }\n    }\n    return zxingFormats;\n  };\n  ZXingHtml5QrcodeDecoder.prototype.createDebugData = function () {\n    return {\n      decoderName: \"zxing-js\"\n    };\n  };\n  return ZXingHtml5QrcodeDecoder;\n}();\nexport { ZXingHtml5QrcodeDecoder };","map":{"version":3,"sources":["../../src/zxing-html5-qrcode-decoder.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as ZXing from \"../third_party/zxing-js.umd\";\nimport { QrcodeResultFormat, Html5QrcodeSupportedFormats } from \"./core\";\nvar ZXingHtml5QrcodeDecoder = (function () {\n    function ZXingHtml5QrcodeDecoder(requestedFormats, verbose, logger) {\n        this.formatMap = new Map([\n            [Html5QrcodeSupportedFormats.QR_CODE, ZXing.BarcodeFormat.QR_CODE],\n            [Html5QrcodeSupportedFormats.AZTEC, ZXing.BarcodeFormat.AZTEC],\n            [Html5QrcodeSupportedFormats.CODABAR, ZXing.BarcodeFormat.CODABAR],\n            [Html5QrcodeSupportedFormats.CODE_39, ZXing.BarcodeFormat.CODE_39],\n            [Html5QrcodeSupportedFormats.CODE_93, ZXing.BarcodeFormat.CODE_93],\n            [\n                Html5QrcodeSupportedFormats.CODE_128,\n                ZXing.BarcodeFormat.CODE_128\n            ],\n            [\n                Html5QrcodeSupportedFormats.DATA_MATRIX,\n                ZXing.BarcodeFormat.DATA_MATRIX\n            ],\n            [\n                Html5QrcodeSupportedFormats.MAXICODE,\n                ZXing.BarcodeFormat.MAXICODE\n            ],\n            [Html5QrcodeSupportedFormats.ITF, ZXing.BarcodeFormat.ITF],\n            [Html5QrcodeSupportedFormats.EAN_13, ZXing.BarcodeFormat.EAN_13],\n            [Html5QrcodeSupportedFormats.EAN_8, ZXing.BarcodeFormat.EAN_8],\n            [Html5QrcodeSupportedFormats.PDF_417, ZXing.BarcodeFormat.PDF_417],\n            [Html5QrcodeSupportedFormats.RSS_14, ZXing.BarcodeFormat.RSS_14],\n            [\n                Html5QrcodeSupportedFormats.RSS_EXPANDED,\n                ZXing.BarcodeFormat.RSS_EXPANDED\n            ],\n            [Html5QrcodeSupportedFormats.UPC_A, ZXing.BarcodeFormat.UPC_A],\n            [Html5QrcodeSupportedFormats.UPC_E, ZXing.BarcodeFormat.UPC_E],\n            [\n                Html5QrcodeSupportedFormats.UPC_EAN_EXTENSION,\n                ZXing.BarcodeFormat.UPC_EAN_EXTENSION\n            ]\n        ]);\n        this.reverseFormatMap = this.createReverseFormatMap();\n        if (!ZXing) {\n            throw \"Use html5qrcode.min.js without edit, ZXing not found.\";\n        }\n        this.verbose = verbose;\n        this.logger = logger;\n        var formats = this.createZXingFormats(requestedFormats);\n        var hints = new Map();\n        hints.set(ZXing.DecodeHintType.POSSIBLE_FORMATS, formats);\n        hints.set(ZXing.DecodeHintType.TRY_HARDER, false);\n        this.hints = hints;\n    }\n    ZXingHtml5QrcodeDecoder.prototype.decodeAsync = function (canvas) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                resolve(_this.decode(canvas));\n            }\n            catch (error) {\n                reject(error);\n            }\n        });\n    };\n    ZXingHtml5QrcodeDecoder.prototype.decode = function (canvas) {\n        var zxingDecoder = new ZXing.MultiFormatReader(this.verbose, this.hints);\n        var luminanceSource = new ZXing.HTMLCanvasElementLuminanceSource(canvas);\n        var binaryBitmap = new ZXing.BinaryBitmap(new ZXing.HybridBinarizer(luminanceSource));\n        var result = zxingDecoder.decode(binaryBitmap);\n        return {\n            text: result.text,\n            format: QrcodeResultFormat.create(this.toHtml5QrcodeSupportedFormats(result.format)),\n            debugData: this.createDebugData()\n        };\n    };\n    ZXingHtml5QrcodeDecoder.prototype.createReverseFormatMap = function () {\n        var result = new Map();\n        this.formatMap.forEach(function (value, key, _) {\n            result.set(value, key);\n        });\n        return result;\n    };\n    ZXingHtml5QrcodeDecoder.prototype.toHtml5QrcodeSupportedFormats = function (zxingFormat) {\n        if (!this.reverseFormatMap.has(zxingFormat)) {\n            throw \"reverseFormatMap doesn't have \".concat(zxingFormat);\n        }\n        return this.reverseFormatMap.get(zxingFormat);\n    };\n    ZXingHtml5QrcodeDecoder.prototype.createZXingFormats = function (requestedFormats) {\n        var zxingFormats = [];\n        for (var _i = 0, requestedFormats_1 = requestedFormats; _i < requestedFormats_1.length; _i++) {\n            var requestedFormat = requestedFormats_1[_i];\n            if (this.formatMap.has(requestedFormat)) {\n                zxingFormats.push(this.formatMap.get(requestedFormat));\n            }\n            else {\n                this.logger.logError(\"\".concat(requestedFormat, \" is not supported by\")\n                    + \"ZXingHtml5QrcodeShim\");\n            }\n        }\n        return zxingFormats;\n    };\n    ZXingHtml5QrcodeDecoder.prototype.createDebugData = function () {\n        return { decoderName: \"zxing-js\" };\n    };\n    return ZXingHtml5QrcodeDecoder;\n}());\nexport { ZXingHtml5QrcodeDecoder };\n//# sourceMappingURL=zxing-html5-qrcode-decoder.js.map"]},"metadata":{},"sourceType":"module"}